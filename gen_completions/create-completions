#!/bin/zsh 
#
# Sublime Text plugin to support Corona SDK
#
# Copyright (c) 2013 Corona Labs Inc. A mobile development software company. All rights reserved.
#
# MIT License - see https://raw.github.com/coronalabs/CoronaSDK-SublimeText/master/LICENSE
#
# create-completions - generate a Sublime completions file from a Corona docs directory
#

if [ $# != 3 ]
then
	echo "Usage: `basename $0` <api-daily-repo-dir> <api-public-repo-dir> <api-legacy-repo-dir>"
	exit 1
fi

CWD=`pwd`
INVALID_COMPLETIONS=${CWD}/invalid-completions-list
ADDITIONAL_COMPLETIONS=${CWD}/additional-completions-list

for DOC_DIR in $*
do
	DOC_DIR="$DOC_DIR"

	LEVEL=`echo "$DOC_DIR" | sed -e 's/.*-//'`
	if [ "$LEVEL" != "daily" -a "$LEVEL" != "public" -a "$LEVEL" != "legacy" ]
	then
		echo "`basename $0`: docs repo directory must end in '-daily', '-public' or '-legacy'"
		exit 1
	fi

	cd ${DOC_DIR}/markdown/api || exit 1

	echo "Generating completions for `pwd` ($LEVEL) ..."
	RAW_COMPS=${CWD}/raw-api-definitions-$LEVEL
	SUBLIME_COMPS=${CWD}/corona.completions-$LEVEL

	for DIR in `find . -type d \! -name '.*'`
	do
		WD=`pwd`

		if [ "`echo $DIR/*.markdown`" = "" ]
		then
			echo "`basename $0`: no markdown files in '$DIR'" >&2
			continue
		fi

		cd $DIR

		for F in *.markdown
		do
			if [ "$F" = "index.markdown" ]
			then
				continue
			fi
			D=`basename $PWD`
			N=`basename $F .markdown`

			# This finds the first line of the "Syntax" section of most files
			RES=`egrep -m 1 '	[A-Za-z]*?[.:]*'"$N" $F | sed -e 's/^	//'`

			if [ "$RES" = "" ]
			then
				# didn't find a syntax string for the item,
				# look for a header at the top of the file
				RES=`head -2 "$F" | sed -n '/^#/s/^# \(.*\)/\1/p'`
			fi

			if [ "$RES" = "" ]
			then
				# didn't find a syntax string or a header for the item,
				# just complete using its name
				RES="$D.$N"
			fi

			# Add an approximation of "type" separated by a tab
			RES="$RES	$D"

			# Remove any "object" prefix as completion works better without it
			echo "$RES" | sed -e 's/object[.:]//'

			# Find any explicit completion items in the file
			# (it's assumed they are formatted with backticks which 
			# might need adjustment)
			fgrep '<!--- completion -->' "$F" | sed -e 's/.*`\([^`]*\)`.*/\1	'$D'/'
		done

		cd $WD

	done | fgrep -v -f $INVALID_COMPLETIONS | cat - $ADDITIONAL_COMPLETIONS | sort -u > $RAW_COMPS

	python ${CWD}/mk_sublime_completions.py $RAW_COMPS >$SUBLIME_COMPS
	wc -l $SUBLIME_COMPS

	mv -v $SUBLIME_COMPS $CWD/../
done

cd $CWD

