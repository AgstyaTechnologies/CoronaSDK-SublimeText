#!/bin/bash 
#
# Sublime Text plugin to support Corona SDK
#
# Copyright (c) 2013 Corona Labs Inc. A mobile development software company. All rights reserved.
#
# MIT License - see https://raw.github.com/coronalabs/CoronaSDK-SublimeText/master/LICENSE
#
# create-completions - generate a Sublime completions file from a Corona docs directory
#

if [ $# != 1 ]
then
	echo "Usage: $(basename "$0") <api-repo-dir>"
	exit 1
fi

CWD=$(pwd)
INVALID_COMPLETIONS=${CWD}/invalid-completions-list
ADDITIONAL_COMPLETIONS=${CWD}/additional-completions-list

for DOC_DIR in "$@"
do
	DOC_DIR="$DOC_DIR"

	LEVEL=${DOC_DIR//*-/}
	echo "$LEVEL"
	# there used to be more levels
	if [ "$LEVEL" != "public" ]
	then
		echo "$(basename "$0"): docs repo directory must end in '-public'"
		exit 1
	fi

	cd "${DOC_DIR}/markdown/api" || exit 1

	echo "Generating completions for $(pwd) ($LEVEL) ..."
	RAW_COMPS=${CWD}/raw-api-definitions-$LEVEL
	SUBLIME_COMPS=${CWD}/corona.completions-$LEVEL

	for DIR in $(find . -type d \! -name '.*')
	do
		WD=$(pwd)

		if [ "$(echo "$DIR"/*.markdown)" = "$DIR"/'*.markdown' ]
		then
			echo "$(basename "$0"): no markdown files in '$DIR'" >&2
			continue
		fi

		cd "$DIR" || exit 1

		for F in *.markdown
		do
			if [ "$F" = "index.markdown" ]
			then
				continue
			fi
			D=$(basename "$PWD")
			N=$(basename "$F" .markdown)

			# Candidates for completion in the markdown docs start with a tab (we delete "Examples" to avoid tabs in sample code)
			COMP=$(sed -e '/^## *Example/,$d' "$F" | egrep '	[A-Za-z]*?[.:]*'"$N" | sed -e 's/^	//')

			if [ "$COMP" = "" ]
			then
				# didn't find a syntax string for the item,
				# look for a header at the top of the file
				COMP=$(head -2 "$F" | sed -n '/^#/s/^# \(.*\)/\1/p')
			fi

			if [ "$COMP" = "" ]
			then
				# didn't find a syntax string or a header for the item,
				# just complete using its name
				COMP="$D.$N"
			fi

			# Add an approximation of "type" separated by a tab
			# (on every line, there may be more than one)
			COMP=$(echo "$COMP" | sed -e "1,\$s/\$/	$D/")

			# Remove any "object" prefix as completion works better without it
			echo "$COMP" | sed -e 's/object[.:]//'

			# Find any explicit completion items in the file
			# (it's assumed they are formatted with backticks which 
			# might need adjustment)
			grep '<!-* completion -->' "$F" | sed -e 's/.*`\([^`]*\)`.*/\1	'"$D"'/'
		done

		cd "$WD" || exit 1

	done | fgrep -v -f "$INVALID_COMPLETIONS" | cat - "$ADDITIONAL_COMPLETIONS" | sort -u > "$RAW_COMPS"

	python "${CWD}"/mk_sublime_completions.py "$RAW_COMPS" >"$SUBLIME_COMPS"
	wc -l "$SUBLIME_COMPS"

	mv -v "$SUBLIME_COMPS" "$CWD"/../
done

cd "$CWD" || exit 1

